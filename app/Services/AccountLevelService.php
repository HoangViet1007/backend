<?php

namespace App\Services;

use App\Constants\StatusConstant;
use App\Exceptions\BadRequestException;
use App\Exceptions\SystemException;
use App\Helpers\QueryHelper;
use App\Models\AccountLevel;
use App\Models\User;
use Exception;

/**
 * @Author apple
 * @Date   Oct 01, 2021
 */
class AccountLevelService extends BaseService
{
    /**
     * @var array
     */
    protected array $status = [StatusConstant::ACTIVE, StatusConstant::INACTIVE];

    function createModel(): void
    {
        $this->model = new AccountLevel();
    }

    public function getAllByAdmin()
    {
        $this->preGetAll();
        $data = $this->queryHelper->buildQuery($this->model)->with('users');
//            ->join('users', 'account_levels.id', 'users.account_level_id')
//            ->select('account_levels.*', 'users.*');
        try {
            $response = $data->paginate(QueryHelper::limit());
            $this->postGetAll($response);
            return $response;
        } catch (Exception $e) {
            throw new SystemException($e->getMessage() ?? __('system-500'), $e);
        }
    }

    public function storeRequestValidate(object $request, array $rules = [], array $messages = []): bool|array
    {
        $rules = [
            'name' => 'required|unique:account_levels,name',
            'image' => 'required',
            'status' => 'required|in:' . implode(',', $this->status),
            'course_number' => 'required|integer|min:0',
            'user_number' => 'required|integer|min:0',
            'is_mutable' => 'required'
        ];
        $messages = [
            'name.required' => 'Hãy nhập tên cấp độ !',
            'name.unique' => 'Cấp độ này đã tồn tại !',
            'image.required' => 'Vui lòng chọn ảnh !',
            'status.required' => 'Hãy chọn trạng thái hoạt động !',
            'status.in' => 'Trạng thái hoạt động không hợp lệ !',
            'course_number.required' => 'Số lượng buổi học không được để trống !',
            'course_number.integer' => 'Số lượng buổi học không hợp lệ !',
            'course_number.min' => 'Số lượng buổi học không hợp lệ !',
            'user_number.required' => 'Số lượng user không được để trống !',
            'user_number.integer' => 'Số lượng user không hợp lệ !',
            'user_number.min' => 'Số lượng user không hợp lệ !',
            'is_mutable.required' => 'Không được để trống !'
        ];

        return parent::storeRequestValidate($request, $rules, $messages); // TODO: Change the autogenerated stub
    }

    public function updateRequestValidate(int|string $id, object $request, array $rules = [], array $messages = []): bool|array
    {
        $rules = [
            'name' => "required|unique:account_levels,name,$id",
            'image' => 'required',
            'status' => 'required|in:' . implode(',', $this->status),
            'course_number' => 'required|integer|min:0',
            'user_number' => 'required|integer|min:0',
            'is_mutable' => 'required'
        ];

        $messages = [
            'name.required' => 'Hãy nhập tiêu đề cho chuyên môn !',
            'name.unique' => 'Tiêu đề này đã tồn tại !',
            'status.required' => 'Hãy chọn trạng thái hoạt động !',
            'status.in' => 'Trạng thái hoạt động không hợp lệ !',
            'course_number.required' => 'Số lượng buổi học không được để trống !',
            'course_number.integer' => 'Số lượng buổi học không hợp lệ !',
            'course_number.min' => 'Số lượng buổi học không hợp lệ !',
            'user_number.required' => 'Số lượng user không được để trống !',
            'user_number.integer' => 'Số lượng user không hợp lệ !',
            'user_number.min' => 'Số lượng user không hợp lệ !',
            'is_mutable.required' => 'Không được để trống !'
        ];

        return parent::updateRequestValidate($id, $request, $rules, $messages); // TODO: Change the autogenerated stub
    }

    public function getAllUseSelectOption()
    {
        $data = $this->queryHelper->buildQuery($this->model)->get();
        try {
            return $data;
        } catch (Exception $e) {
            throw new SystemException($e->getMessage() ?? __('system-500'), $e);
        }
    }

    public function preDelete(int|string $id)
    {
        $countUser = User::where('account_level_id', $id)->count();
        $mutable = AccountLevel::find($id);
        if ($countUser > 0 || $mutable->is_mutable == 0) {
            throw new BadRequestException(
                ['message' => __("Xoá cấp độ không thành công !")], new Exception()
            );
        }
        parent::preDelete($id);
    }
}
