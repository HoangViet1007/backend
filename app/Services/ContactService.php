<?php

namespace App\Services;

use App\Constants\StatusConstant;
use App\Mail\sendEmailContact;
use App\Models\Contact;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Mail;

/**
 * @Author apple
 * @Date   Sep 30, 2021
 */
class ContactService extends BaseService
{
    protected array $status = [StatusConstant::PROCESS, StatusConstant::PROCESSED];

    function createModel(): void
    {
        $this->model = new Contact();
    }

    public function preAdd(object $request)
    {
        if ($request instanceof Request) {
            $request->merge(
                [
                    'status' => StatusConstant::PROCESS
                ]
            );
        } else {
            $request->status = StatusConstant::PROCESS;
        }
        parent::preAdd($request);
    }

    public function storeRequestValidate(object $request, array $rules = [], array $messages = []): bool|array
    {
        $rules    = [
            'name'    => 'required|string|min:3',
            'phone'   => 'required|regex:/(0)[0-9]{9}/',
            'email'   => 'required|email',
            'title'   => 'required',
            'content' => 'required',
        ];
        $messages = [
            'name.required'    => 'Hãy nhập họ và tên !',
            'phone.required'   => 'Hãy nhập số điện thoại !',
            'phone.regex'      => 'Số điện thoại không hợp lệ !',
            'email.required'   => 'Hãy nhập địa chỉ email !',
            'email.email'      => 'Địa chỉ email không hợp lệ !',
            'title.required'   => 'Hãy nhập tiêu đề liên hệ !',
            'content.required' => 'Hãy nhập nội dung liên hệ !',
        ];

        return parent::storeRequestValidate($request, $rules, $messages); // TODO: Change the autogenerated stub
    }

    public function preUpdate(int|string $id, object $request)
    {
        if ($request instanceof Request) {
            $request->merge(
                [
                    'status' => StatusConstant::PROCESS
                ]
            );
        } else {
            $request->status = StatusConstant::PROCESS;
        }
        parent::preUpdate($id, $request);
    }

    public function updateRequestValidate(int|string $id, object $request, array $rules = [],
                                          array      $messages = []): bool|array
    {
        $rules    = [
            'name'    => 'required|string|min:3',
            'phone'   => 'required|regex:/(0)[0-9]{9}/',
            'email'   => 'required|email',
            'title'   => 'required',
            'content' => 'required',
        ];
        $messages = [
            'name.required'    => 'Hãy nhập họ và tên !',
            'phone.required'   => 'Hãy nhập số điện thoại !',
            'phone.regex'      => 'Số điện thoại không hợp lệ !',
            'email.required'   => 'Hãy nhập địa chỉ email !',
            'email.email'      => 'Địa chỉ email không hợp lệ !',
            'title.required'   => 'Hãy nhập tiêu đề liên hệ !',
            'content.required' => 'Hãy nhập nội dung liên hệ !',
        ];

        return parent::updateRequestValidate($id, $request, $rules, $messages); // TODO: Change the autogenerated stub
    }

    public function sendEmailContact(object $request)
    {
        $this->doValidate($request,
                          [
                              'name'        => 'required',
                              'title'       => 'required',
                              'email'       => 'required|email',
                              'description' => 'required',
                              'phone'       => ''
                          ],
                          [
                              'name.required'        => 'Hãy nhập họ và tên !',
                              'title.required'       => 'Hãy nhập tiêu đề liên hệ !',
                              'email.required'       => 'Hãy nhập email liên hệ !',
                              'email.email'          => 'Email liên hệ không hợp lệ !',
                              'description.required' => 'Hãy nhập nội dung liên hệ !',
                          ]
        );

        Mail::to($request->email)->send(new sendEmailContact($request->name, $request->email, $request->title,
                                                             $request->phone, $request->description));

        return true;
    }

}
