<?php

namespace App\Services;

use App\Constants\StatusConstant;
use App\Exceptions\SystemException;
use App\Helpers\QueryHelper;
use App\Models\Certificate;
use App\Models\User;
use Illuminate\Contracts\Pagination\LengthAwarePaginator;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Http\Request;

/**
 * @Author apple
 * @Date   Sep 30, 2021
 */
class CertificateService extends BaseService
{
    protected array $status = [StatusConstant::PROCESS, StatusConstant::PROCESSED];

    function createModel(): void
    {
        $this->model = new Certificate();
    }

    public function getAll(): LengthAwarePaginator
    {
        $idUser = auth()->user()->id;

//        $data = User::where('id',$idUser)->with('');

        $this->preGetAll();
        $data = $this->queryHelper->buildQuery($this->model)->with(['user' => function ($query) use ($idUser) {
            $query->where('id', '=', $idUser);
        }]);


        try {
            $response = $data->paginate(QueryHelper::limit());
            $this->postGetAll($response);
            return $response;
        } catch (Exception $e) {
            throw new SystemException($e->getMessage() ?? __('system-500'), $e);
        }
    }

    public function listCertificatesSpecialize($id)
    {
        try {
            $response = Certificate::where('specialize_detail_id', $id)->get();
            return $response;
        } catch (Exception $e) {
            throw new SystemException($e->getMessage() ?? __('system-500'), $e);
        }
    }

    /**
     * @param object $request
     * @param array $rules
     * @param array $messages
     * @return bool|array
     */


    public function storeRequestValidate(object $request, array $rules = [], array $messages = []): bool|array
    {
        $rules = [
            'name' => 'required|max:100|unique:certificates,name',
            'image' => 'required',
            'specialize_detail_id' => 'required|exists:specializes,id',
        ];
        $messages = [
            'name.required' => 'Hãy nhập tên chứng chỉ !',
            'name.unique' => 'Tên chứng chỉ đã tồn tại !',
            'name.max' => 'Tên chứng chỉ không quá 100 ký tự !',
            'image.required' => 'Hãy nhập ảnh !',
            'specialize_detail_id.required' => 'Hãy chọn chuyên môn của chứng chỉ !',
            'specialize_detail_id.exists' => 'Chuyên môn không tồn tại !',
        ];

        return parent::storeRequestValidate($request, $rules, $messages); // TODO: Change the autogenerated stub
    }


    public function updateRequestValidate(int|string $id, object $request, array $rules = [],
                                          array $messages = []): bool|array
    {
        $rules = [
            'name' => "required|max:100|unique:certificates,name,$id",
            'image' => 'required',
            'specialize_detail_id' => 'required|exists:specializes,id',
        ];
        $messages = [
            'name.required' => 'Hãy nhập tên chứng chỉ !',
            'name.unique' => 'Tên chứng chỉ đã tồn tại !',
            'name.max' => 'Tên chứng chỉ không quá 100 ký tự !',
            'image.required' => 'Hãy nhập ảnh !',
            'specialize_detail_id.exists' => 'Chuyên môn không tồn tại !',
        ];

        return parent::updateRequestValidate($id, $request, $rules, $messages); // TODO: Change the autogenerated stub
    }

}
